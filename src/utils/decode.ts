// ! IGNORE THIS FILE, USED TO DECODE TX DATA FOR TESTING

import { decodeFunctionData, decodeAbiParameters } from 'viem'
import { EXACT_INPUT_PARAMS } from './abi'

// const txData =
//   '0x24856bcc0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a900000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000a22e011bf47a9decf30180000000000000000000000000000000000000000000000000001bb6aa9d8eed7000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000d564d5be76f7f0d28fe52605afc7cf80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000f785bb58059fab6fb19bdda2cb9078d9e546efdc00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000009e433f32bb5481a9ca7dff5b3af74a7ed041a88800000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a90000000000000000000000000000000000000000000a22e011bf47a9decf3018000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001bb6aa9d8eed7' // <— paste your entire calldata here
const txData = '0x24856bc300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000210040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000004e00000000000000000000000000000000000000000000000000000000000000480000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003070c0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000142a8ad24c98783765451b000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000d564d5be76f7f0d28fe52605afc7cf80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000009e433f32bb5481a9ca7dff5b3af74a7ed041a88800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000f785bb58059fab6fb19bdda2cb9078d9e546efdc00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000000400000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a9000000000000000000000000000000000000000000142a8ad24c98783765451b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d11dd72b7555205746fa537928d87dec6bd262750000000000000000000000000000000000000000000000000000000000000000'
// const txData = '0x24856bcc0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a90000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000001aacbdfbc971c941edd65080000000000000000000000000000000000000000000000000049504645540ad1000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000d564d5be76f7f0d28fe52605afc7cf80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000f785bb58059fab6fb19bdda2cb9078d9e546efdc00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000009e433f32bb5481a9ca7dff5b3af74a7ed041a88800000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000003025e7854482bcfb770b0b204a6a8ad11c5152a9000000000000000000000000000000000000000001aacbdfbc971c941edd6508000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049504645540ad1'

const { args } = decodeFunctionData({ abi: EXACT_INPUT_PARAMS, data: txData })
const [ commands, inputs ] = args as [string, `0x${string}`[]]
console.log('commands:', commands)
console.log('inputs:', inputs[0])

// Decode V4_SWAP
const [ actions, paramsArray ] = decodeAbiParameters(
  [
    { type: 'bytes',   name: 'actions' },
    { type: 'bytes[]', name: 'params'  },
  ],
  inputs?.[0] ?? '0x'
)
console.log('action opcodes:', actions)           // e.g. "0x07…"  
console.log('number of params:', paramsArray.length) // should be 3

// Decode params[0] = ExactInputParams
const ExactInputParamsDef = [
  { type: 'address',   name: 'currencyIn'      },
  {
    type: 'tuple[]',   name: 'path',
    components: [
      { type: 'address', name: 'intermediateCurrency' },
      { type: 'uint24',  name: 'fee'                 },
      { type: 'int24',   name: 'tickSpacing'         },
      { type: 'address', name: 'hooks'               },
      { type: 'bytes',   name: 'hookData'            },
    ],
  },
  { type: 'uint128',   name: 'amountIn'         },
  { type: 'uint128',   name: 'amountOutMinimum' },
] as const

const [ swapParams ] = decodeAbiParameters(
  [{ type: 'tuple', components: ExactInputParamsDef }],
  paramsArray[0]
) as [{
  currencyIn: string,
  path: Array<{
    intermediateCurrency: string,
    fee: number,
    tickSpacing: number,
    hooks: string,
    hookData: string
  }>,
  amountIn: bigint,
  amountOutMinimum: bigint
}]
console.log('swapParams:', swapParams)

// Decode params[1] = SETTLE_ALL (address, uint256)
const [ settleCurrency, settleAmount ] = decodeAbiParameters(
  [{ type: 'address', name: 'currency' }, { type: 'uint256', name: 'amount' }],
  paramsArray[1]
) as [string, bigint]
console.log('settle:', { settleCurrency, settleAmount: settleAmount.toString() })

// Decode params[2] = TAKE_ALL (address, uint256)
const [ takeCurrency, takeAmount ] = decodeAbiParameters(
  [{ type: 'address', name: 'currency' }, { type: 'uint256', name: 'amount' }],
  paramsArray[2]
) as [string, bigint]
console.log('take:', { takeCurrency, takeAmount: takeAmount.toString() })

const [ token, recipient, minAmount ] = decodeAbiParameters(
  [{ type: 'address', name: 'token' }, { type: 'address', name: 'recipient' }, { type: 'uint256', name: 'minAmount' }],
  inputs[1] as `0x${string}`
)
console.log({ token, recipient, minAmount })

export { EXACT_INPUT_PARAMS }
